/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _VECTOR_CALC_H_RPCGEN
#define _VECTOR_CALC_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


struct VecPair {
	int n;
	struct {
		u_int X_len;
		int *X_val;
	} X;
	struct {
		u_int Y_len;
		int *Y_val;
	} Y;
};
typedef struct VecPair VecPair;

struct RealVec2 {
	double real[2];
};
typedef struct RealVec2 RealVec2;

struct RealVec {
	int n;
	struct {
		u_int real_len;
		double *real_val;
	} real;
};
typedef struct RealVec RealVec;

struct InputData {
	VecPair VP;
	double r;
};
typedef struct InputData InputData;

#define VECTOR_CALC_PROG 0x23451111
#define VECTOR_CALC_VERS 1

#if defined(__STDC__) || defined(__cplusplus)
#define DOT_PRODUCT 1
extern  int * dot_product_1(VecPair *, CLIENT *);
extern  int * dot_product_1_svc(VecPair *, struct svc_req *);
#define AVERAGE 2
extern  RealVec2 * average_1(VecPair *, CLIENT *);
extern  RealVec2 * average_1_svc(VecPair *, struct svc_req *);
#define MULTIPLY 3
extern  RealVec * multiply_1(InputData *, CLIENT *);
extern  RealVec * multiply_1_svc(InputData *, struct svc_req *);
extern int vector_calc_prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define DOT_PRODUCT 1
extern  int * dot_product_1();
extern  int * dot_product_1_svc();
#define AVERAGE 2
extern  RealVec2 * average_1();
extern  RealVec2 * average_1_svc();
#define MULTIPLY 3
extern  RealVec * multiply_1();
extern  RealVec * multiply_1_svc();
extern int vector_calc_prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_VecPair (XDR *, VecPair*);
extern  bool_t xdr_RealVec2 (XDR *, RealVec2*);
extern  bool_t xdr_RealVec (XDR *, RealVec*);
extern  bool_t xdr_InputData (XDR *, InputData*);

#else /* K&R C */
extern bool_t xdr_VecPair ();
extern bool_t xdr_RealVec2 ();
extern bool_t xdr_RealVec ();
extern bool_t xdr_InputData ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_VECTOR_CALC_H_RPCGEN */
